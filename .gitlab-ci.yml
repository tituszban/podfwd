stages:
  - build
  - deploy
  - cleanup

variables:
  CONTAINER_NAME: gcr.io/$PROJECT_ID/$CR_SERVICE_NAME/$CI_COMMIT_BRANCH/$IMAGE_NAME:latest


before_script:
  - echo $GCP_SA_KEY | base64 -d > sa.json

build:
  image: docker:latest
  only:
    refs:
      - master
  services:
    - docker:dind
  stage: build
  script:
    # Login to Google Container Registry
    - cat sa.json | docker login -u _json_key --password-stdin https://gcr.io
    # Build and tag image for both GCR and Gitlab registries
    - docker build --cache-from $CONTAINER_NAME -t $CONTAINER_NAME -t $IMAGE_NAME:latest .
    # Push image to GCR
    - docker push $CONTAINER_NAME

deploy:
  image: google/cloud-sdk:latest
  only:
    refs:
      - master
  stage: deploy
  script:
    # Authenticate with service account
    - gcloud auth activate-service-account $GCP_SA_NAME --key-file sa.json
    # Push container to Cloud Run
    - >-
        gcloud run deploy $CR_SERVICE_NAME
        --image $CONTAINER_NAME
        --region $CR_REGION --project $PROJECT_ID
        --no-allow-unauthenticated --update-env-vars FINGERPRINT=$CI_COMMIT_SHORT_SHA

verify:
  image: google/cloud-sdk:latest
  only:
    refs:
      - master
  stage: cleanup
  script:
    # Authenticate with service account
    - gcloud auth activate-service-account $GCP_SA_NAME --key-file sa.json
    # Find run endpoint, call the fingerprint path and check against expected commit signature
    - >- 
        gcloud run services describe $CR_SERVICE_NAME --region $CR_REGION --project $PROJECT_ID --format=\"value(status.url)\" |
        sed 's/$/\\/fingerprint/'|
        xargs -n 1 curl -H \"Authorization: Bearer $(gcloud auth print-identity-token)\" |
        grep \"$CI_COMMIT_SHORT_SHA\"

prune_containers:
  image: google/cloud-sdk:latest
  only:
    refs:
      - master
  stage: cleanup
  script:
    # Authenticate with service account
    - gcloud auth activate-service-account $GCP_SA_NAME --key-file sa.json
    # Delete older containers
    - python3 ci/prune_containers.py $PROJECT_ID $CR_SERVICE_NAME $CR_REGION $CONTAINER_NAME
  